grafico_diag_princ
# Contar os DIAG_PRINC mais comuns em cada top 5 município por ano
top3_diag_por_municipio_ano <- dados_filtrados %>%
group_by(ANO_CMPT, munResNome) %>%
count(DIAG_PRINC, sort = TRUE) %>%
top_n(3, n) %>%
ungroup()
# Gerar o gráfico de barras lado a lado
grafico_diag_princ <- ggplot(top3_diag_por_municipio_ano, aes(x = munResNome, y = n, fill = DIAG_PRINC)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ANO_CMPT, scales = "free_x") +
labs(title = "Top 3 Diagnósticos Principais em Top 5 Municípios de Maior Prevalência por Ano",
x = "Município",
y = "Frequência",
fill = "Diagnóstico Principal") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))+
theme(legend.position = "bottom")
grafico_diag_princ
ggsave("top3_diagnosticos_top5mun_ano.jpg", grafico_diag_princ, width = 8, height = 11, units = "in", dpi = 300)
# Carregar pacotes necessários
library(dplyr)
library(ggplot2)
library(openxlsx)
# Carregar os dados e ajustá-los
dados_populacao <- read.xlsx("Proj_pop_SE.xlsx", sheet = 1)
dados_internacoes <- read.xlsx("dados_CID10.xlsx", sheet = 1)
dados_internacoes$ANO_CMPT <- as.factor(dados_internacoes$ANO_CMPT)
dados_populacao$Populacao <- as.numeric(dados_populacao$Populacao)
dados_internacoes$IDADE <- as.numeric(as.character(dados_internacoes$IDADE))
# Crie uma nova coluna para a faixa etária com base na idade
dados_internacoes$FAIXA_ETARIA <- cut(dados_internacoes$IDADE,
breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, Inf),
labels = c("0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80+"),
include.lowest = TRUE)
# Renomear colunas em dados_populacao para corresponder a dados_internacoes
colnames(dados_populacao)[colnames(dados_populacao) == "Ano"] <- "ANO_CMPT"
colnames(dados_populacao)[colnames(dados_populacao) == "Faixa_etaria"] <- "FAIXA_ETARIA"
colnames(dados_populacao)[colnames(dados_populacao) == "Sexo"] <- "SEXO"
# Função para normalizar os nomes dos municípios
normalize_municipio <- function(municipio) {
municipio <- tolower(municipio) # Converter para minúsculas
municipio <- iconv(municipio, to = "ASCII//TRANSLIT") # Remover acentuações
return(municipio)}
# Aplicar a função de normalização aos dados
dados_populacao$munResNome <- normalize_municipio(dados_populacao$Municipio)
dados_internacoes$munResNome <- normalize_municipio(dados_internacoes$munResNome)
########### Vamos calcular outros indicadores epidemiologicos
# Filtrar internações que resultaram em morte
dados_mortes <- dados_internacoes %>%
filter(MORTE == "Sim")
## Calcular a Taxa de Mortalidade ajustada para cada faixa etária
taxa_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_populacao %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Populacao_Faixa_Etaria = sum(Populacao)), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Taxa_Mortalidade = (Total_Mortes / Populacao_Faixa_Etaria) * 10000)
## Calcular a Taxa de Mortalidade ajustada para cada faixa etária
taxa_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_populacao %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Populacao_Faixa_Etaria = sum(Populacao)), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Taxa_Mortalidade = (Total_Mortes / Populacao_Faixa_Etaria) * 10000)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_line() +
geom_text(data = taxa_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Taxa_Mortalidade = max(Taxa_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes") +
theme_minimal() +
theme(legend.position = "none")+
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
# Calcular a Letalidade
letalidade <- dados_internacoes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Casos = n(), Mortes = sum(MORTE == "Sim")) %>%
mutate(Letalidade = (Mortes / Total_Casos) * 100)
View(letalidade)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_line() +
geom_text(data = taxa_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Taxa_Mortalidade = max(Taxa_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes") +
theme_minimal() +
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_line() +
geom_text(data = taxa_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Taxa_Mortalidade = max(Taxa_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes") +
theme_minimal() +
theme(legend.position = "none")+
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
# Calcular a Letalidade
letalidade <- dados_internacoes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Casos = n(), Mortes = sum(MORTE == "Sim")) %>%
mutate(Letalidade = (Mortes / Total_Casos) * 100)
grafico_letalidade <- ggplot(letalidade, aes(x = ANO_CMPT, y = Letalidade, fill = FAIXA_ETARIA)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Letalidade por Faixa Etária e Ano",
x = "Ano",
y = "Letalidade (%)") +
theme_minimal()+
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
grafico_letalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_bar() +
geom_text(data = taxa_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Taxa_Mortalidade = max(Taxa_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes") +
theme_minimal() +
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
# Calcular a Letalidade
letalidade <- dados_internacoes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Casos = n(), Mortes = sum(MORTE == "Sim")) %>%
mutate(Letalidade = (Mortes / Total_Casos) * 100)
grafico_letalidade <- ggplot(letalidade, aes(x = ANO_CMPT, y = Letalidade, fill = FAIXA_ETARIA)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Letalidade por Faixa Etária e Ano",
x = "Ano",
y = "Letalidade (%)") +
theme_minimal()+
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
ggrafico_letalidade
grafico_letalidade
ggsave("letalidade_faixaetaria_ano.jpg", grafico_letalidade, width = 8, height = 11, units = "in", dpi = 300)
# Gráfico da Proporção de Mortalidade com Rótulos
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
# Calcular a Proporção de Mortalidade
proporcao_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_internacoes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Internacoes = n()), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Proporcao_Mortalidade = (Total_Mortes / Total_Internacoes) * 100)
# Converter ANO_CMPT para numérico
proporcao_mortalidade$ANO_CMPT <- as.numeric(as.character(proporcao_mortalidade$ANO_CMPT))
# Gráfico da Proporção de Mortalidade com Rótulos
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom")+
theme(plot.title = element_text(hjust = 0.5))
grafico_proporcao
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_area(alpha = 0.8, position = 'stack') +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom")
print(grafico_taxa_mortalidade)
# Calcular a Taxa de Mortalidade ajustada para cada faixa etária
taxa_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_populacao %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Populacao_Faixa_Etaria = sum(Populacao)), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Taxa_Mortalidade = (Total_Mortes / Populacao_Faixa_Etaria) * 10000)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_area(alpha = 0.8, position = 'stack') +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom")
print(grafico_taxa_mortalidade)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_area(position = 'stack') +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
# Carregar pacotes necessários
library(dplyr)
library(ggplot2)
library(openxlsx)
# Carregar os dados e ajustá-los
dados_populacao <- read.xlsx("Proj_pop_SE.xlsx", sheet = 1)
dados_internacoes <- read.xlsx("dados_CID10.xlsx", sheet = 1)
dados_internacoes$ANO_CMPT <- as.factor(dados_internacoes$ANO_CMPT)
dados_populacao$Populacao <- as.numeric(dados_populacao$Populacao)
dados_internacoes$IDADE <- as.numeric(as.character(dados_internacoes$IDADE))
# Crie uma nova coluna para a faixa etária com base na idade
dados_internacoes$FAIXA_ETARIA <- cut(dados_internacoes$IDADE,
breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, Inf),
labels = c("0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80+"),
include.lowest = TRUE)
# Renomear colunas em dados_populacao para corresponder a dados_internacoes
colnames(dados_populacao)[colnames(dados_populacao) == "Ano"] <- "ANO_CMPT"
colnames(dados_populacao)[colnames(dados_populacao) == "Faixa_etaria"] <- "FAIXA_ETARIA"
colnames(dados_populacao)[colnames(dados_populacao) == "Sexo"] <- "SEXO"
# Função para normalizar os nomes dos municípios
normalize_municipio <- function(municipio) {
municipio <- tolower(municipio) # Converter para minúsculas
municipio <- iconv(municipio, to = "ASCII//TRANSLIT") # Remover acentuações
return(municipio)}
# Aplicar a função de normalização aos dados
dados_populacao$munResNome <- normalize_municipio(dados_populacao$Municipio)
dados_internacoes$munResNome <- normalize_municipio(dados_internacoes$munResNome)
#### Vamos calcular outros indicadores epidemiologicos
# Filtrar internações que resultaram em morte
dados_mortes <- dados_internacoes %>%
filter(MORTE == "Sim")
# Calcular a Taxa de Mortalidade ajustada para cada faixa etária
taxa_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_populacao %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Populacao_Faixa_Etaria = sum(Populacao)), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Taxa_Mortalidade = (Total_Mortes / Populacao_Faixa_Etaria) * 10000)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_area(position = 'stack') +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
taxa_mortalidade$ANO_CMPT <- as.character(taxa_mortalidade$ANO_CMPT)
taxa_mortalidade$FAIXA_ETARIA <- as.character(taxa_mortalidade$FAIXA_ETARIA)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_area(position = 'stack', alpha = 0.8) +  # Ajuste aqui
scale_fill_brewer(palette = "Set1") +         # Adiciona uma paleta de cores
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, fill = FAIXA_ETARIA)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_brewer(palette = "Set1") +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
fill = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
# Calcular a Taxa de Mortalidade ajustada para cada faixa etária
taxa_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_populacao %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Populacao_Faixa_Etaria = sum(Populacao)), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Taxa_Mortalidade = (Total_Mortes / Populacao_Faixa_Etaria) * 10000)
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, color = FAIXA_ETARIA, group = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
color = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, color = FAIXA_ETARIA, group = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
color = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 90))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, color = FAIXA_ETARIA, group = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
color = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 100))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, color = FAIXA_ETARIA, group = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
color = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 95))
grafico_taxa_mortalidade
grafico_taxa_mortalidade <- ggplot(taxa_mortalidade, aes(x = ANO_CMPT, y = Taxa_Mortalidade, color = FAIXA_ETARIA, group = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
labs(title = "Taxa de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Taxa de Mortalidade por 100.000 habitantes",
color = "Faixa Etária") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 100))
grafico_taxa_mortalidade
ggsave("taxa_mortalidade_faixaetaria_ano.jpg", grafico_taxa_mortalidade, width = 8, height = 11, units = "in", dpi = 300)
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_proporcao
# Calcular a Proporção de Mortalidade
proporcao_mortalidade <- dados_mortes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Mortes = n()) %>%
left_join(dados_internacoes %>%
group_by(ANO_CMPT, FAIXA_ETARIA) %>%
summarise(Total_Internacoes = n()), by = c("ANO_CMPT", "FAIXA_ETARIA")) %>%
mutate(Proporcao_Mortalidade = (Total_Mortes / Total_Internacoes) * 100)
# Converter ANO_CMPT para numérico
proporcao_mortalidade$ANO_CMPT <- as.numeric(as.character(proporcao_mortalidade$ANO_CMPT))
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1.1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 50))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 1) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 50))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = 0.5) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 50))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() +
geom_line() +
geom_text(data = proporcao_mortalidade %>%
group_by(FAIXA_ETARIA) %>%
summarise(ANO_CMPT = max(ANO_CMPT), Proporcao_Mortalidade = max(Proporcao_Mortalidade)),
aes(label = FAIXA_ETARIA), vjust = -0.5, hjust = -0.5) +
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))+
expand_limits(y = c(0, 50))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
ggrafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() + # Adiciona pontos
geom_line() +  # Conecta os pontos com linhas
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_proporcao
# Gráfico da Proporção de Mortalidade
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() + # Adiciona pontos
geom_line() +  # Conecta os pontos com linhas
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_proporcao
grafico_proporcao <- ggplot(proporcao_mortalidade, aes(x = ANO_CMPT, y = Proporcao_Mortalidade, group = FAIXA_ETARIA, color = FAIXA_ETARIA)) +
geom_point() + # Adiciona pontos
geom_line() +  # Conecta os pontos com linhas
labs(title = "Proporção de Mortalidade por Faixa Etária e Ano",
x = "Ano",
y = "Proporção de Mortalidade (%)") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))
grafico_proporcao
ggsave("proporcao_mortalidade_ano.jpg", grafico_proporcao, width = 8, height = 11, units = "in", dpi = 300)
